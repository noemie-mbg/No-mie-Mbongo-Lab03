import matplotlib.pyplot as plt 
from sklearn.datasets import load_iris
iris=load_iris()
iris.feature_names

from sklearn.model_selection import train_test_split
X=iris.data
y=iris.target
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2)

from sklearn.svm import SVC
SVMmodel=SVC(kernel='linear')
SVMmodel.fit(X_train,y_train)
SVMmodel.get_params()
SVMmodel.score(X_test,y_test)

X=iris.data[iris.target!=2,0:2]
print(X.shape)
y=iris.target[iris.target!=2]
SVMmodel_1=SVC(kernel='linear',C=200)

X_train_1, X_test_1, y_train_1, y_test_1 = train_test_split(X,y,test_size=0.2)
SVMmodel_1.fit(X_train_1,y_train_1)
SVMmodel_1.score(X_test_1,y_test_1)


plt.scatter(X[y==0, 0],X[y==0,1],color='blue')
plt.scatter(X[y==1,0],X[y==1,1],color='red')
plt.scatter(X[y==2,0],X[y==2,1],color='cyan')

W = SVMmodel_1.coef_
b=SVMmodel_1.intercept_
#print(W)
print(b)
import numpy as np
x1=np.linspace(np.min(X[:,0]),np.max(X[:,0]),100)
x2 = -(W[0, 0] * x1 + b) / W[0, 1]

plt.scatter(x1, x2, color='black')
